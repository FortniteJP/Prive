@page "/server"
@inject IHttpClientFactory HttpFactory
@using System.Text.Json

<div>
    <p>New User</p>
    <input type="text" placeholder="Username" @bind-value="Username" />
    <input type="text" placeholder="Password" @bind-value="Password" />
    <button @onclick="RandomPassword">Random password</button>
    <button @onclick="CreateUser">Create User</button>
</div>

<div>
    <p>Process</p>
    <button @onclick="StartProcess">Start Server Process</button>
    <button @onclick="StopProcess">Stop Server Process</button>
</div>

<div>
    <p>MatchMaking</p>
    <button @onclick="TimeToGoTrue">Time to go True</button>
    <button @onclick="TimeToGoFalse">Time to go False</button>
</div>

<div>
    <p>Set Port</p>
    <input type="number" placeholder="Port" @bind-value="Port" />
    <button @onclick="SetPort">Set Port</button>
</div>

<div>
    <p>Things</p>
    <button @onclick="Restart">Restart</button>
    <button @onclick="StartBus">Start Bus</button>
    <button @onclick="InfiniteAmmoTrue">Infinite Ammo True</button>
    <button @onclick="InfiniteAmmoFalse">Infinite Ammo False</button>
    <button @onclick="InfiniteMaterialsTrue">Infinite Materials True</button>
    <button @onclick="InfiniteMaterialsFalse">Infinite Materials False</button>
</div>

<div>
    <p>Zone</p>
    <button @onclick="StartSafeZone">Start safe zone</button>
    <button @onclick="StopSafeZone">Stop safe zone</button>
    <button @onclick="SkipSafeZone">Skip safe zone</button>
    <button @onclick="StartShrinkSafeZone">Start shrink safe zone</button>
    <button @onclick="SkipShrinkZone">Skip shrink zone</button>
</div>

@code {
    HttpClient Http = default!;
    protected override void OnInitialized() => Http = HttpFactory.CreateClient();

    string Username = string.Empty;
    string Password = string.Empty;
    int Port = 20000;

    async void StartProcess() => await Http.PostAsync("https://api.fortnite.day/serverapi/start", null);
    async void StopProcess() => await Http.PostAsync("https://api.fortnite.day/serverapi/stop", null);

    async void TimeToGoTrue() => await Http.PostAsync("https://api.fortnite.day/serverapi/timetogotrue", null);
    async void TimeToGoFalse() => await Http.PostAsync("https://api.fortnite.day/serverapi/timetogofalse", null);

    async void CreateUser() {
        try {
            var r = await Http.PostAsync("https://api.fortnite.day/serverapi/createuser", new StringContent(JsonSerializer.Serialize(new {
                username = Username,
                password = Password
            }), null, "application/json"));
            Console.WriteLine($"Response: {await r.Content.ReadAsStringAsync()}");
        } catch (Exception e) {
            Console.WriteLine(e.ToString());
        }
    }

    void RandomPassword() {
        Password = Guid.NewGuid().ToString().Replace("-", "").Substring(0, 8);
    }

    async void SetPort() => await Http.PostAsync("https://api.fortnite.day/serverapi/setport", new StringContent(JsonSerializer.Serialize(new {
        port = Port
    }), null, "application/json"));

    async void Restart() => await Http.PostAsync("https://api.fortnite.day/serverapi/restart", null);

    async void StartBus() => await Http.PostAsync("https://api.fortnite.day/serverapi/startbus", null);

    async void InfiniteAmmoTrue() => await Http.PostAsync("https://api.fortnite.day/serverapi/infiniteammotrue", null);
    async void InfiniteAmmoFalse() => await Http.PostAsync("https://api.fortnite.day/serverapi/infiniteammofalse", null);

    async void InfiniteMaterialsTrue() => await Http.PostAsync("https://api.fortnite.day/serverapi/infinitematerialstrue", null);
    async void InfiniteMaterialsFalse() => await Http.PostAsync("https://api.fortnite.day/serverapi/infinitematerialsfalse", null);

    async void StartSafeZone() => await Http.PostAsync("https://api.fortnite.day/serverapi/startsafezone", null);
    async void StopSafeZone() => await Http.PostAsync("https://api.fortnite.day/serverapi/stopsafezone", null);
    async void SkipSafeZone() => await Http.PostAsync("https://api.fortnite.day/serverapi/skipsafezone", null);
    async void StartShrinkSafeZone() => await Http.PostAsync("https://api.fortnite.day/serverapi/startshrinksafezone", null);
    async void SkipShrinkZone() => await Http.PostAsync("https://api.fortnite.day/serverapi/skipshrinksafezone", null);
}